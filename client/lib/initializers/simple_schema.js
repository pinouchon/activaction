SimpleSchema.messages({
  required: "Ce champ doit être remplis",
  minString: "[label] doit faire au minimum [min] caractères",
  maxString: "[label] ne doit pas dépasser [max] caractères",
  minNumber: "[label] doit être au moins [min]",
  maxNumber: "[label] ne doit pas dépasser [max]",
  minDate: "[label] doit être après [min]",
  maxDate: "[label] doit être avant [max]",
  minCount: "Vous devez préciser au minimum [minCount] valeurs",
  maxCount: "Vous ne pouvez pas spécifier plus de [maxCount] valeurs",
  noDecimal: "[label] doit être un nombre entier",
  notAllowed: "[value] n'est pas une valeur autorisée",
  expectedString: "[label] doit être une chaine de caractères",
  expectedNumber: "[label] doit être un nombre",
  expectedBoolean: "[label] doit être un booléen",
  expectedArray: "[label] doit être un tableau",
  expectedObject: "[label] doit être un objet",
  expectedConstructor: "[label] doit être un [type]",
  passwordMismatch: "Doit être identique au mot de passe",
  notUnique: "Cet [label] existe déjà",
  regEx: [
    {msg: "[label] est mal formatté"},
    {exp: SimpleSchema.RegEx.Email, msg: "[label] doit être une adresse email valide"},
    {exp: SimpleSchema.RegEx.WeakEmail, msg: "[label] doit être une adresse email valide"},
    {exp: SimpleSchema.RegEx.Domain, msg: "[label] doit être un nom de domaine valide"},
    {exp: SimpleSchema.RegEx.WeakDomain, msg: "[label] doit être un nom de domaine valide"},
    {exp: SimpleSchema.RegEx.IP, msg: "[label] doit être une adresse IPv4 ou IPv6 valide"},
    {exp: SimpleSchema.RegEx.IPv4, msg: "[label] doit être une adresse IPv4 valide"},
    {exp: SimpleSchema.RegEx.IPv6, msg: "[label] doit être une adresse IPv6 valide"},
    {exp: SimpleSchema.RegEx.Url, msg: "[label] doit être une URL valide. ex: http://domain.com"},
    {exp: SimpleSchema.RegEx.Id, msg: "[label] doit être une ID alphanumérique valide"}
  ],
  keyNotInSchema: "[label] n'est pas autorisé dans le schéma"
});